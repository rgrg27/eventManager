{"version":3,"sources":["components/EventFormField.js","redux/selectors.js","components/EventEditor.js","redux/actions.js","constants.js","components/EventFilter.js","components/EventList.js","App.js","redux/reducer/rootReducer.js","redux/store.js","serviceWorker.js","index.js"],"names":["EventFormField","fieldName","this","props","updatedFieldName","split","map","s","toUpperCase","slice","join","className","type","rows","value","name","onChange","e","onValueChange","placeholder","error","length","Component","getEvents","events","window","localStorage","getItem","eventsArray","JSON","parse","getEventsByFilter","filter","event","discount","price","EventEditor","validateForm","errors","valid","Object","values","forEach","val","handleChange","preventDefault","target","state","eventName","description","isNaN","setState","venue","handleSubmit","bind","handleDiscard","addEvent","console","log","stringify","onClick","connect","localStore","counter","parseInt","id","Date","toLocaleDateString","push","setItem","addEventToLocal","payload","VISIBILITY_FILTERS","ALL","FREE","DISCOUNT","NODISCOUNT","activeFilter","currentFilter","setFilter","keys","filterKey","key","eventList","App","initialState","createStore","action","Boolean","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fa5db098.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\n\n \nclass EventFormField extends Component {\n  render() {\n    const fieldName = this.props.fieldName;\n    const updatedFieldName = fieldName.split(/(?=[A-Z])/).map(s => s[0].toUpperCase()+s.slice(1)).join(' ');\n    if(fieldName ===\"description\"){\n      return (\n        <div className=\"form-group\">\n          <label className=\"field-name\">{updatedFieldName}:</label>\n          <textarea type=\"text\" className=\"form-control\" rows=\"6\" value={this.props.value} name={this.props.fieldName} \n          onChange={(e)=>this.props.onValueChange(e)} placeholder={\"Enter \"+updatedFieldName}/>\n           {this.props.error.length > 0 && \n                <span className='error'>{this.props.error}</span>}\n        </div>\n      );\n    }\n    return (\n        <div className=\"form-group\">\n          <label className=\"field-name\">{updatedFieldName}:</label>\n          <input type=\"text\" className=\"form-control\" value={this.props.value} name={this.props.fieldName} \n          onChange={(e)=>this.props.onValueChange(e)} placeholder={\"Enter \"+updatedFieldName}/>\n          {this.props.error.length > 0 && \n                <span className='error'>{this.props.error}</span>}\n        </div>\n    );\n  }\n}\n\n export default EventFormField;\n\n\n\n// export default connect(mapStateToProps,{addNote})(EventFormField);","export function getEvents(){\n\tvar localStore = window.localStorage;\n\tconst events = localStore.getItem(\"events\");\n\tvar eventsArray = [];\n\tif(events!=null){\n\t\teventsArray = JSON.parse(events);\n\t}\n\treturn eventsArray;\n}\n\nexport function addEventToLocal(event){ \n\tvar localStore = window.localStorage;\n\tvar counter = parseInt(localStore.getItem(\"counter\"));\n\tif(counter==null){\n\t\tcounter = 0;\n\t}\n\telse{\n\t\tcounter+=1;\n\t}\n\tevent.id = new Date().toLocaleDateString()+counter;\n\tconst events = getEvents();\n\tevents.push(event);\n\tlocalStore.setItem(\"events\", JSON.stringify(events));\n\tlocalStore.setItem(\"counter\", counter);\n}\n\nexport function getEventsByFilter(filter){\n\tconst events = getEvents();\n\tswitch(filter){\n\t\tcase \"discount\" :{\n\t\t\treturn events.filter((event)=> event.discount!=0);\n\t\t} \n\t\tcase \"free\" :{\n\t\t\treturn events.filter((event)=> (event.price == 0 || event.discount ==100))\n\t\t}\n\t\tcase \"nodiscount\" : {\n\t\t\treturn events.filter((event)=> (event.discount == 0))\n\t\t}\n\t\tdefault:\n\t\t\treturn events;\n\t}\n}\n\n","import React, { Component } from 'react';\n\nimport EventFormField from './EventFormField';\n\nimport {connect} from \"react-redux\";\nimport {addEvent} from \"../redux/actions\";\n\n \nclass EventEditor extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n    \teventName: \"\",\n      description: \"\",\n      venue: \"\",\n      price: \"\",\n      discount: \"\",\n      errors:{\n        eventName: \"\",\n        description: \"\",\n        venue: \"\",\n        price: \"\",\n        discount: \"\",\n      }    \n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleDiscard = this.handleDiscard.bind(this);\n  } \n\n\n  validateForm = (errors) => {\n    let valid = true;\n    Object.values(errors).forEach(\n      (val) => val.length > 0 && (valid = false)\n    );\n    return valid;\n  }\n\n  handleChange = (event) => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    let errors = this.state.errors;\n\n    switch (name) {\n      case 'eventName': \n        errors.eventName = \n          value.length < 5\n            ? 'Event Name must be atlest 5 characters long!'\n            : '';\n        break;\n      case 'description': \n        errors.description = \n          value.length < 15\n            ? 'Description must be atleast 15 characters long!'\n            : '';\n        break;\n      case 'price': \n        errors.price = \n          (isNaN(value))\n            ? 'Price must be a positive numeric value'\n            : '';\n        break;\n      case 'discount': \n        errors.discount = \n          isNaN(value)\n            ? 'discount must be a numeric value'\n            : '';\n        break;\n      default:\n        break;\n    }\n\n    this.setState({errors, [name]: value});\n  }\n\n  handleSubmit(){\n  \tconst event = { \n  \t\teventName: this.state.eventName,\n  \t\tdescription: this.state.description,\n  \t\tvenue: this.state.venue,\n  \t\tprice: this.state.price,\n  \t\tdiscount: this.state.discount,\n  \t};\n    if(this.validateForm(this.state.errors)) {\n      this.props.addEvent(event);\n      this.handleDiscard();\n    }else{\n      console.error('Invalid Form')\n    }\n  \tconsole.log(JSON.stringify(event));\n  }\n  handleDiscard(){\n    this.setState({eventName: \"\", description: \"\", venue: \"\", price: \"\", discount: \"\"})\n  }\n  componentDidMount(){\n    \n  }\n  render() {\n    return (\n        <div className=\"event-add\">\n          <div className=\"event-editor\">\n            <h5 className=\"\">Add an event</h5>\n            <div>\n              <EventFormField fieldName=\"eventName\" value = {this.state.eventName} \n               error={this.state.errors.eventName} onValueChange={(e) =>this.handleChange(e)}/>\n              <EventFormField fieldName=\"description\" value = {this.state.description} \n                error={this.state.errors.description} onValueChange={(e) =>this.handleChange(e)}/>\n              <EventFormField fieldName=\"venue\" value = {this.state.venue} \n                error={this.state.errors.venue} onValueChange={(e) =>this.handleChange(e)}/>\n              <EventFormField fieldName=\"price\" value = {this.state.price} \n                error={this.state.errors.price} onValueChange={(e) =>this.handleChange(e)}/>\n              <EventFormField fieldName=\"discount\" value = {this.state.discount} \n                error={this.state.errors.discount} onValueChange={(e) =>this.handleChange(e)}/>\n            </div>\n            <div className=\"button-group\">\n              <button type=\"submit\" className=\"event-button form-submit\" onClick={this.handleSubmit}>Submit</button>\n              <button type=\"submit\" className=\"event-button\" onClick={this.handleDiscard}>Discard</button>\n            </div>\n          </div>\n        </div>\n    );\n  }\n}\n\n\n\n\n // export default EventEditor;\n\n\n\nexport default connect(null,{addEvent})(EventEditor);","// import {addEventToLocal,updateNoteToLocal, getNotesByDate, deleteNoteById,getNoteById}  from \"./selectors\"\nimport {addEventToLocal, getEvents, getEventsByFilter}  from \"./selectors\"\n\n\nexport function addEvent(event){\n\t// get nextTodoId\n\taddEventToLocal(event);\n\tconsole.log(\"hi\")\n\tconst events = getEvents();\n\treturn { type:\"ADDEVENT\", payload: { events }};\n}\n\nexport function setFilter(filter) {\n\tconst events = getEventsByFilter(filter)\n\treturn{\ttype: \"SETFILTER\",\tpayload: {filter: filter, events: events}};\n}\n\n\n// export function editNote(note){\t\n// \tconst {title,description,date,id} = note;\n// \tupdateNoteToLocal(title,description,date,id);\n// \tconst notes = getNotesByDate(date);\n// \treturn {type:\"EDITNOTE\", payload: { notes, date:date }};\n// }\n\n// export function deleteNote(id){\t\n// \tconst note = getNoteById(id);\n// \tconst arr = note.date.split(\"/\");\n// \tvar formatedDate = new Date(arr[2],parseInt(arr[1])-1,arr[0]);\n// \tdeleteNoteById(id);\n// \tconst notes = getNotesByDate(formatedDate);\n// \treturn {type:\"EDITNOTE\", payload: { notes, date:formatedDate }};\n// }\n\n// export function toggleEdit(id,date){\n// \tconst arr = date.split(\"/\");\n// \tvar formatedDate = new Date(arr[2],parseInt(arr[1])-1,arr[0]);\n// \treturn {type:\"TOGGLEEDIT\",payload:{id:id,formatedDate:formatedDate}};\n// }\n\n// export function hideEdit(id,date){\n// \tconst arr = date.split(\"/\");\n// \tvar formatedDate = new Date(arr[2],parseInt(arr[1])-1,arr[0]);\n// \treturn {type:\"HIDEEDIT\",payload:{id:id,formatedDate:formatedDate}};\n// }\n\n// export function updateDate(date){\n// \treturn {\n// \t\ttype:\"UPDATEDATE\",\n// \t\tpayload: { \n// \t\t\tdate: date\n// \t\t}\n// \t};\n// }\n","export const VISIBILITY_FILTERS = {\n  ALL: \"all\",\n  FREE: \"free\",\n  DISCOUNT: \"discount\",\n  NODISCOUNT: \"nodiscount\"\n};\n","import React from \"react\";\nimport {connect} from \"react-redux\";\n\nimport {VISIBILITY_FILTERS} from \"../constants\";\nimport {setFilter} from \"../redux/actions\";\n\nexport function EventFilter(props){\n  const activeFilter = props.activeFilter;\n  return(\n    <div className=\"visibility-filters\">\n      { Object.keys(VISIBILITY_FILTERS).map((filterKey)=>{\n        const currentFilter = VISIBILITY_FILTERS[filterKey];\n        return(\n          <span className={currentFilter===activeFilter ? \"btn event-button\" : \"btn\"} key = {`visibility-filter-${currentFilter}`} \n            onClick={()=>props.setFilter(currentFilter)}>\n            {currentFilter}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n\nfunction mapStateToProps(state){\n  return {activeFilter: state.currentFilter}\n}\n\nexport default connect(mapStateToProps, {setFilter})(EventFilter);\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {getEventsByFilter} from \"../redux/selectors\";\nimport EventFilter from \"./EventFilter\";\n\n\nfunction EventList(props){\n\tconst events = props.events;\n\tconst eventList = (events && events.length) ? events.map((event)=>{\n\t\treturn <div className=\"event\" key={event.id}>\n\t\t\t\t\t<div className=\"event-head\">\n\t\t\t\t\t\t<h2>{event.eventName}</h2>\n\t\t\t\t\t\t<div className=\"event-desc\">{event.description}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"event-info\">\n\t\t\t\t\t\t<h4>{event.venue}</h4>\n\t\t\t\t\t\t<h5>Price: Rs. {event.price}/-</h5>\n\t\t\t\t\t\t<h6>Discount: {event.discount} %</h6>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t}):\n\t\t<h2>No Events Available. Create An Event</h2>\n    return(\n    <div>\n      \t<h1 className=\"event-show\">Events</h1>\n      \t<EventFilter/>\n      \t{eventList}\n    </div>\n  );\n}\n\nfunction mapStateToProps(state){\n\tconst {currentFilter} = state;\n\tconst events = getEventsByFilter(currentFilter);\n\treturn {events: events, currentFilter: currentFilter}\n}\nexport default connect(mapStateToProps)(EventList);\n","import React from 'react';\r\nimport EventEditor from './components/EventEditor';\r\nimport EventList from './components/EventList';\r\n\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <EventEditor />\r\n      <EventList/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","\n\nconst initialState = {\n\tevents:[],\n\tcurrentFilter: \"all\"\n}\n\nexport default function(state=initialState,action){\n\tswitch(action.type){\n\t\tcase \"ADDEVENT\" :{\n\t\t\tconsole.log(\"inside reducer\")\n\t\t\tconst {events} = action.payload;\n\t\t\treturn {...state, events: events}\n\t\t}\n\t\tcase \"SETFILTER\" :{\n\t\t\tconsole.log(\"in\");\n\t\t\tconst {filter, events} = action.payload;\n\t\t\treturn {...state, currentFilter: filter, events:events}\n\t\t}\n\t\tdefault :\n\t\t\treturn state;\n\t}\n}","import { createStore } from \"redux\";\nimport rootReducer from \"./reducer/rootReducer\";\n\nexport default createStore(rootReducer);\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n\r\n"],"sourceRoot":""}